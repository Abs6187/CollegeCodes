#include <stdio.h>

typedef struct node
{
 int data;
 struct node *next;
}node;
node *top,*temp,*ttemp;
int n;
void init()
{
 top=NULL,temp=NULL,ttemp=NULL;
}

void push(int x)
{
 temp=(node*)malloc(sizeof(node));
 if(temp==NULL)
 {
  printf("Memory Full\n");
  return;
 }
 temp->data=x;
 temp->next=top;
 top=temp;
}

int pop()
{
 int x;
 temp=top;
 if(top==NULL)
 {
 printf("Stack is empty\n");
 return;
 }
 x=temp->data;
 top=top->next;
 temp->next=NULL;
 free(temp);
 return x;
}

void display()
{
 if(top==NULL)
  printf("\nStack is empty");
 else
 {
  temp=top;
  printf("\nElements of stack are:\t");
  while(temp!=NULL)
  {
   printf("%d\t",temp->data);
   temp=temp->next;
  }
 }
}

void main()
{
 int t,i,ele;
 clrscr();
 init();
 printf("Enter total number of elements to be entered in a stack");
 scanf("%d",&n);
 for(i=1;i<=n;i++)
 {
  printf("\nEnter value of %d element:",i);
  scanf("%d",&ele);
  push(ele);
 }
 display();
 ele=pop();
 printf("\nPop function is called once, top element %d is popped\n",ele);
 printf("After popping");
 display();
 getch();
}